


<head>

  <title>AetherHub</title>
  <link rel="stylesheet" type="text/css" href="looks.css">
  <script src="https://cdn.jsdelivr.net/npm/qrious@4.0.2/dist/qrious.min.js"></script>

</head>



<body>
    <nav class="read-nav">
        <a href="/" class="read-nav-logo">                    
                <img src="https://i.ibb.co/4ZcLKjY/borderless.png" alt="">
        </a>
    </nav>
    <div class="bc">

        <div id='stars2'></div>
        <div id='stars3'></div>
    </div>

    <div class="upl_container" onclick="handleFileButtonClick()" >

      <form class="box" >

        <div class="box_input">
          <svg class="box_icon" xmlns="http://www.w3.org/2000/svg" width="50" height="43" viewBox="0 0 50 43"><path d="M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z"/></svg>
          <input type="file" name="file" id="files" class="box__file" multiple />
          <label for="file"><strong>Choose a file</strong><span class="box__dragndrop"> or drag it here</span>.</label>
          <div class="box_button-wrapper">
            <button type="submit" class="box_button" style="vertical-align:middle"><span>Submit </span></button>
          </div>
          
        </div>

          
        </form>
      </div>

      <div class="qr_popup">
        <div class="qr_window">
          <button type="back" id="qr_back">&ltBack</button>
        <div class="qr_box" >
          
        </div>
        <lable class="qr_link" onclick="copyToClipboard(event)">link</lable>
      </div>
      </div>

      <div class="copyLinkMessage" id="copyMessage">Link copied to clipboard</div>

      <script>
        // const QRCode = require('qrcode')
        // const qrCodeFilePath = './views/data/';

        var shareLink = 'unableToLoad';
        droppedFiles = null;
        const form = document.querySelector('form');


        const handleFileButtonClick = () => {
          if (!event.target.matches('.box_button') && !event.target.closest('.box_button')) {
                document.getElementById('files').click();
            }
        }
        
        // feature detection
        var isAdvancedUpload = function()
        {
          var div = document.createElement( 'div' );
          return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) && 'FormData' in window && 'FileReader' in window;
        }();
        
        
        // applying effect
        var forms = document.querySelectorAll( '.box' );
        Array.prototype.forEach.call( forms, function( form )
        {
          var input		 = form.querySelector( 'input[type="file"]' ),
            label		 = form.querySelector( 'label' ),
            errorMsg	 = form.querySelector( '.box__error span' ),
            restart		 = form.querySelectorAll( '.box__restart' ),
            showFiles	 = function( files )
            {
              label.textContent = files.length > 1 ? ( input.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', files.length ) : files[ 0 ].name;
            }
            
        
        
            if( isAdvancedUpload )
            {
              form.classList.add( 'has-advanced-upload' ); 
        
              [ 'drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop' ].forEach( function( event )
              {
                form.addEventListener( event, function( e )
                {
                  e.preventDefault();
                  e.stopPropagation();
                });
              });
              [ 'dragover', 'dragenter' ].forEach( function( event )
              {
                form.addEventListener( event, function()
                {
                  form.classList.add( 'is-dragover' );
                });
              });
              [ 'dragleave', 'dragend', 'drop' ].forEach( function( event )
              {
                form.addEventListener( event, function()
                {
                  form.classList.remove( 'is-dragover' );
                });
              });
              form.addEventListener( 'drop', function( e )
              {
                droppedFiles = e.dataTransfer.files; 
                showFiles( droppedFiles );
        
                });
            }
        
        });
        
        
        
        //upload_at_submit---------------
        form.addEventListener('submit', (e) => {
            
            e.preventDefault();
            
         
            const files = document.getElementById("files");
            const formData = new FormData();
            
            formData.append("name", name.value);
            
            for(let i =0; i < files.files.length; i++) {
                formData.append("files", files.files[i]);
            }
            if (droppedFiles != null) {
                for (let i = 0; i < droppedFiles.length; i++) {
                    formData.append("files", droppedFiles[i]);
                }
            }
            
            
            fetch('http://localhost:80/uploads', {
                method: 'POST',
                body: formData, 
            })
            .then(res => res.json())
            .then(data => {
            setShareLink(data.variable);
            
          })


        })

        document.getElementById('qr_back').addEventListener('click', () => {
          document.querySelector('.qr_popup').style.display = 'none';
        });
        
        function setShareLink(sLink){
          shareLink = sLink;
          
          document.querySelector('.qr_popup').style.display = 'flex';
          document.querySelector('.qr_link').textContent = shareLink;
          
          // qrcode.toFile(qrCodeFilePath, shareLink, (error) => {
          //   if (error) {
          //     console.error('Error generating QR code:', error);
          //     return;
          //  }
          // });
          generateQRCode(shareLink);
          
        }

        function generateQRCode(link) {
          const qrCodeContainer = document.querySelector('.qr_box');
          console.log(qrCodeContainer)
          qrCodeContainer.innerHTML = ''; // Clear previous QR code (if any)

          const qr = new QRious({
            element: qrCodeContainer,
            value: shareLink,
            size: 350
          });
          console.log("worked")
          const qrCodeImage = document.createElement('img');
          qrCodeImage.src = qr.toDataURL();
          // qrCodeImage.style.borderRadius = '10px';
          qrCodeContainer.appendChild(qrCodeImage);
        }

        function copyToClipboard(event) {
          const linkText = event.target.innerText;

          navigator.clipboard.writeText(linkText)
            .then(() => {
              console.log('Text copied to clipboard:', linkText);
              // Optionally, you can show a success message to the user
            })
            .catch((error) => {
              console.error('Unable to copy text to clipboard:', error);
              // Optionally, you can show an error message to the user
            });

            const messageElement = document.querySelector('.copyLinkMessage');
            // messageElement.textContent = message;
            // messageElement.style.display = 'block';
            messageElement.style.opacity = 0.6;

            setTimeout(() => {
              // messageElement.style.display = 'none';
              messageElement.style.opacity = 0;
            }, 1500);
        }

        
        
        </script>

</body>
